/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2020-07-18 03:33:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class informe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1594489411340L));
    _jspx_dependants.put("jar:file:/home/carlos/Documents/LP_II_T4NN_G0X_WORKSPACE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/asesoramientoSoftware/WEB-INF/lib/standard.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1098729090000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write(" \n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<!-- Bootstrap CSS -->\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\t<div class=\"container\">\n");
      out.write("  \t\t<form method=\"post\" action=\"ServletInforme?accion=REGISTRAR\" method=\"post\" id=\"id_registrar\">\n");
      out.write("\t\t  <div class=\"form-group\">\n");
      out.write("\t\t\t    <label for=\"exampleFormControlTextarea1\">Introduccion</label>\n");
      out.write("\t\t\t    <textarea  class=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"introduccion\" placeholder=\"Ingresar introduccion\" rows=\"3\"></textarea>\n");
      out.write("\t\t\t  </div>\n");
      out.write("\t\t\t  <div class=\"form-group\">\n");
      out.write("\t\t\t    <label for=\"exampleFormControlTextarea1\">Antedecentes</label>\n");
      out.write("\t\t\t    <textarea  class=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"antecedentes\" placeholder=\"Ingresar antecedentes\" rows=\"3\"></textarea>\n");
      out.write("\t\t\t  </div>\n");
      out.write("\t\t\t  <div class=\"form-group\">\n");
      out.write("\t\t\t    <label for=\"exampleFormControlTextarea1\">Analisis</label>\n");
      out.write("\t\t\t    <textarea  class=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"analisis\" placeholder=\"Ingresar analisis\" rows=\"3\"></textarea>\n");
      out.write("\t\t\t  </div>\n");
      out.write("\t\t\t  <div class=\"form-group\">\n");
      out.write("\t\t\t    <label for=\"exampleFormControlTextarea1\">Conclusiones</label>\n");
      out.write("\t\t\t    <textarea  class=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"conclusiones\" placeholder=\"Ingresar conclusiones\" rows=\"3\"></textarea>\n");
      out.write("\t\t\t  </div>\n");
      out.write("\t\t\t  <div class=\"form-group\">\n");
      out.write("\t\t\t    <label for=\"exampleFormControlTextarea1\">Recomendaciones</label>\n");
      out.write("\t\t\t    <textarea  class=\"form-control\" id=\"exampleFormControlTextarea1\" name=\"recomendaciones\" placeholder=\"Ingresar recomendaciones\" rows=\"3\"></textarea>\n");
      out.write("\t\t\t  </div>\n");
      out.write("\t\t\t  <div class=\"form-group\">\n");
      out.write("\t\t\t    <label for=\"exampleFormControlSelect1\">Estado</label>\n");
      out.write("\t\t\t    <select class=\"form-control\" name=\"estado\">\n");
      out.write("\t\t\t      <option>[Seleccione]</option>\n");
      out.write("\t\t\t      <option value=\"Pendiente\">Pendiente</option>\n");
      out.write("\t\t\t      <option value=\"Aceptado\">Aceptado</option>\n");
      out.write("\t\t\t       <option value=\"Rechazado\">Rechazado</option>\n");
      out.write("\t\t\t    </select>\n");
      out.write("\t\t\t  </div>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t  <button type=\"submit\" class=\"btn btn-primary\">Grabar</button>\n");
      out.write("\t\t  <button type=\"button\" class=\"btn btn-success\">Listar</button>\n");
      out.write("\t\t</form>\n");
      out.write("\t</div>\t\n");
      out.write("\t\n");
      out.write("\t<!-- Optional JavaScript -->\n");
      out.write("    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n");
      out.write(" \n");
      out.write(" \t<!-- jQuery validate -->\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/jquery-validation@1.19.1/dist/jquery.validate.js\"></script>\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/jquery-validation@1.19.1/dist/jquery.validate.min.js\"></script>\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/jquery-validation@1.19.1/dist/additional-methods.js\"></script>\n");
      out.write("\t<script src=\"https://cdn.jsdelivr.net/npm/jquery-validation@1.19.1/dist/additional-methods.min.js\"></script>\n");
      out.write("\t\n");
      out.write("\t<script>\n");
      out.write("\t$(\".btn-success\").click(function(){\n");
      out.write("\t\twindow.location.href='listaInformeTecnico.jsp';\n");
      out.write("\t})\n");
      out.write("\t</script>\n");
      out.write("  \t\n");
      out.write("  \t<script>    \n");
      out.write("\t  $('#id_registrar').validate({\n");
      out.write("\t    rules: {\n");
      out.write("\t    \tintroduccion:{\n");
      out.write("\t    \t\trequired:true,\n");
      out.write("\t    \t\tpattern:'[a-zA-Z\\\\s\\\\Ñ\\\\ñ]{1,200}'\n");
      out.write("\t    \t},\n");
      out.write("\t    \tantecedentes:{\n");
      out.write("\t    \t\trequired:true,\n");
      out.write("\t    \t\tpattern:'[a-zA-Z\\\\s\\\\Ñ\\\\ñ]{1,200}'\n");
      out.write("\t    \t},\n");
      out.write("\t    \tanalisis:{\n");
      out.write("\t    \t\trequired:true,\n");
      out.write("\t    \t\tpattern:'[a-zA-Z\\\\s\\\\Ñ\\\\ñ]{1,200}'\n");
      out.write("\t    \t},\n");
      out.write("\t    \tconclusiones:{\n");
      out.write("\t    \t\trequired:true,\n");
      out.write("\t    \t\tpattern:'[a-zA-Z\\\\s\\\\Ñ\\\\ñ]{1,200}'\n");
      out.write("\t    \t},\n");
      out.write("\t    \trecomendaciones:{\n");
      out.write("\t    \t\trequired:true,\n");
      out.write("\t    \t\tpattern:'[a-zA-Z\\\\s\\\\Ñ\\\\ñ]{1,200}'\n");
      out.write("\t    \t},\n");
      out.write("\t    \testado:{\n");
      out.write("\t    \t\trequired:true\n");
      out.write("\t    \t\t\n");
      out.write("\t    \t}\n");
      out.write("\t    },\n");
      out.write("\t    messages:{\n");
      out.write("\t    \tintroduccion:{\n");
      out.write("\t    \t\trequired:'Ingresar introduccion',\n");
      out.write("\t    \t\tpattern:'Campo descripcion solo letras'\n");
      out.write("\t    \t},\n");
      out.write("\t    \tantecedentes:{\n");
      out.write("\t    \t\trequired:'ingresar antecedentes',\n");
      out.write("\t    \t\tpattern:'Campo origen solo letras'\n");
      out.write("\t    \t},\n");
      out.write("\t    \tanalisis:{\n");
      out.write("\t    \t\trequired:'ingresar analisis',\n");
      out.write("\t    \t\tpattern:'Campo area solo letras'\n");
      out.write("\t    \t\n");
      out.write("\t    \t},\n");
      out.write("\t    \tconclusiones:{\n");
      out.write("\t    \t\trequired:'ingresar conclusiones',\n");
      out.write("\t    \t\tpattern:'Campo area solo letras'\n");
      out.write("\t    \t\n");
      out.write("\t    \t},\n");
      out.write("\t    \trecomendaciones:{\n");
      out.write("\t    \t\trequired:'ingresar recomendaciones',\n");
      out.write("\t    \t\tpattern:'Campo area solo letras'\n");
      out.write("\t    \t\n");
      out.write("\t    \t},\n");
      out.write("\t    \testado:{\n");
      out.write("\t    \t\trequired:'ingresar estado'\n");
      out.write("\t    \t}\n");
      out.write("\t    },\n");
      out.write("\t    errorElement: 'span',\n");
      out.write("\t    errorPlacement: function (error, element) {\n");
      out.write("\t        error.addClass('invalid-feedback');\n");
      out.write("\t        element.closest('.form-group').append(error);\n");
      out.write("\t    },\n");
      out.write("\t    highlight: function (element, errorClass, validClass) {\n");
      out.write("\t        $(element).addClass('is-invalid');\n");
      out.write("\t    },\n");
      out.write("\t    unhighlight: function (element, errorClass, validClass) {\n");
      out.write("\t        $(element).removeClass('is-invalid');\n");
      out.write("\t    },\n");
      out.write("\t})\n");
      out.write("\t</script>\t\t\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /informe.jsp(14,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.MENSAJE!=null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("\t\t<div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n");
          out.write("\t\t  <strong>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.MENSAJE}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</strong>\n");
          out.write("\t\t  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n");
          out.write("\t\t    <span aria-hidden=\"true\">&times;</span>\n");
          out.write("\t\t  </button>\n");
          out.write("\t\t</div>\n");
          out.write("\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
